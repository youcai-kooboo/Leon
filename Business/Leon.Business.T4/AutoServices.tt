<#@ template debug="False" hostspecific="True" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Xml.Linq" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ include file="MultiOutput.tt" #>
<#@ Output Extension="log" #>
<#
  string servicesNamespace = "Leon.Business.Services";
  string modelsNamespace = "Leon.Business.Models";
  var database = "Leon";
  var rootFolder = Host.ResolvePath("").Replace(@"\Business\Leon.Business.T4","");
  var schemasFolderPath = rootFolder + string.Format(@"\Web\Cms_Data\Contents\{0}\Schemas\", database);
  if (!Directory.Exists(schemasFolderPath)) {
  throw new Exception(String.Format("\"{0}\" not found", schemasFolderPath));
  }
  string[] schemaFolderPaths = Directory.GetDirectories(schemasFolderPath).Where(it => !it.EndsWith("svn")).ToArray();
  foreach(string schemaFolderPath in schemaFolderPaths) {
  string schemaName = new DirectoryInfo(schemaFolderPath).Name.Trim();
  AutoGenerateService(modelsNamespace, servicesNamespace, schemaName);

  string outputFileName = schemaName + "Service.cs";
  SaveOutput(outputFileName);
  }
  DeleteOldOutputs();
  #>
  Auto generate services at <#= DateTime.Now #> from <#= schemasFolderPath #>
<#+ void AutoGenerateService(string modelsNamespace, string servicesNamespace, string schemaName) { #>
using System;
using System.Text;
using System.Linq;
using System.Collections.Generic;
using Kooboo.CMS.Content.Models;
using Kooboo.CMS.Content.Query;
using Kooboo.CMS.Toolkit;
using Kooboo.CMS.Toolkit.Services;
using <#= modelsNamespace #>;

namespace <#= servicesNamespace #> {

    public class <#= schemaName #>Service : LeonServiceBase<<#= schemaName #>> {
        public <#= schemaName #>Service() {
        }
    }
}
<#+ } #>